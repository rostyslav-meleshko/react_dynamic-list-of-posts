{"version":3,"sources":["api/api.js","api/posts.js","components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostComments/PostComments.jsx","components/PostDetails/PostDetails.jsx","components/UserSelect/UserSelect.jsx","App.jsx","index.js"],"names":["BASE_URL","request","requiredData","fetch","then","response","json","result","data","getUserPosts","userId","posts","filter","post","getUsers","users","user","address","sort","a","b","id","getPostDetails","postId","Loader","className","PostsList","setSelectedPostId","selectedPostId","useState","setPosts","useEffect","postsFromServer","fetchPosts","length","map","key","title","type","onClick","undefined","defaultProps","getComments","comments","comment","createComment","method","headers","body","JSON","stringify","name","email","deleteComment","NewCommentForm","setComments","inputs","setInputs","handleChange","value","handleSubmit","event","preventDefault","onSubmit","placeholder","onChange","target","PostComments","handleClick","postComments","PostDetails","setPost","isCommentsHide","setIsCommentsHide","Promise","all","commentsFromServer","postFromServer","fetchServer","UserSelect","setUserId","setUsers","usersFromServer","fetchUsers","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c18e0cc3.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(requiredData) {\n  return fetch(`${BASE_URL}${requiredData}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","'use_strict';\n\nimport { request } from './api';\n\nexport const getUserPosts = (userId) => {\n  const postsFromServer = request('/posts')\n    .then((posts) => {\n      if (+userId > 0) {\n        return posts.filter(post => post.userId === +userId);\n      }\n\n      return posts;\n    });\n\n  return postsFromServer;\n};\n\nexport const getUsers = () => {\n  const usersFromServer = request('/users')\n    .then(users => users.filter(user => user.address !== null))\n    .then(users => users.sort((a, b) => a.id - b.id));\n\n  return usersFromServer;\n};\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\nimport { Loader } from '../Loader';\nimport './PostsList.scss';\n\nexport const PostsList = ({ userId, setSelectedPostId, selectedPostId }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    async function fetchPosts() {\n      const postsFromServer = await getUserPosts(userId);\n\n      setPosts(postsFromServer);\n    }\n\n    fetchPosts();\n  }, [userId]);\n\n  const handleClick = (postId) => {\n    setSelectedPostId(postId === selectedPostId ? undefined : postId);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {posts.length ? (\n        <ul className=\"PostsList__list\">\n          {posts.map(post => (\n            <li className=\"PostsList__item\" key={post.id}>\n              <div>\n                <b>{`[User #${post.userId}]: `}</b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleClick(post.id)}\n              >\n                {`${selectedPostId === post.id ? 'Close' : 'Open'}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : <Loader />}\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number,\n  selectedPostId: PropTypes.number,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  selectedPostId: undefined,\n  userId: undefined,\n};\n","'use_strict';\n\nimport { BASE_URL, request } from './api';\n\nexport const getComments = (postId) => {\n  const commentsFromServer = request('/comments')\n    .then(comments => comments.filter(comment => comment.postId === postId));\n\n  return commentsFromServer;\n};\n\nexport const createComment = (postId, data) => (\n  fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: { 'Context-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({\n      postId,\n      name: data.name,\n      email: data.email,\n      body: data.body,\n    }),\n  }).then(response => response.json())\n);\n\nexport const deleteComment = postId => (\n  fetch(`${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n    headers: { 'Context-type': 'application/json; charset=UTF-8' },\n  })\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createComment, getComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [inputs, setInputs] = useState({\n    name: '', email: '', body: '',\n  });\n\n  const handleChange = ({ name, value }) => {\n    setInputs({ [name]: value });\n  };\n\n  const clearForm = () => {\n    setInputs({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  const handleSubmit = async(event) => {\n    event.preventDefault();\n    await createComment(postId, inputs);\n    const comments = await getComments(postId);\n\n    setComments(comments);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={event => handleSubmit(event)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={inputs.name}\n          onChange={event => handleChange(event.target)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={inputs.email}\n          onChange={event => handleChange(event.target)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={inputs.body}\n          onChange={event => handleChange(event.target)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteComment, getComments } from '../../api/comments';\n\nexport const PostComments = ({ comments, setComments, postId }) => {\n  const handleClick = async(comment) => {\n    await deleteComment(comment.id);\n    const postComments = await getComments(postId);\n\n    setComments(postComments);\n  };\n\n  return (\n    <>\n      {comments.map(comment => (\n        <li\n          key={comment.id}\n          className=\"PostDetails__list-item\"\n        >\n          <button\n            type=\"button\"\n            className=\"PostDetails__remove-button button\"\n            onClick={() => {\n              handleClick(comment);\n            }}\n          >\n            X\n          </button>\n          <p>{comment.body}</p>\n        </li>\n      ))}\n    </>\n  );\n};\n\nPostComments.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({})),\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n\nPostComments.defaultProps = {\n  comments: [],\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Loader } from '../Loader';\nimport { PostComments } from '../PostComments';\nimport { getPostDetails } from '../../api/posts';\nimport { getComments } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [isCommentsHide, setIsCommentsHide] = useState(false);\n\n  useEffect(() => {\n    async function fetchServer() {\n      const [commentsFromServer, postFromServer] = await Promise.all([\n        getComments(postId), getPostDetails(postId),\n      ]);\n\n      setComments(commentsFromServer);\n      setPost(postFromServer);\n    }\n\n    fetchServer();\n  }, [postId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        {post.body ? <p>{post.body}</p> : <Loader />}\n      </section>\n\n      {comments.length > 0 ? (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              setIsCommentsHide(!isCommentsHide);\n            }}\n          >\n            {`${isCommentsHide ? 'Show' : 'Hide'} ${comments.length} comments`}\n          </button>\n\n          <ul className=\"PostDetails__list\">\n            {!isCommentsHide && (\n            <PostComments\n              comments={comments}\n              postId={postId}\n              setComments={setComments}\n            />\n            )}\n          </ul>\n\n        </section>\n      ) : (<p>No comments yet</p>)}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number,\n};\n\nPostDetails.defaultProps = {\n  postId: undefined,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../api/posts';\n\nexport const UserSelect = ({ userId, setUserId }) => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const usersFromServer = await getUsers();\n\n      setUsers(usersFromServer);\n    }\n\n    fetchUsers();\n  }, []);\n\n  return (\n    <label>\n      Select a user: &nbsp;\n      <select\n        className=\"App__user-selector\"\n        value={userId}\n        onChange={(event) => {\n          setUserId(+event.target.value);\n        }}\n      >\n        <option value=\"0\">All users</option>\n        {users.map(user => (\n          <option\n            key={user.id}\n            value={+user.id}\n          >\n            {user.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n\nUserSelect.propTypes = {\n  userId: PropTypes.number,\n  setUserId: PropTypes.func.isRequired,\n};\n\nUserSelect.defaultProps = {\n  userId: undefined,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect';\n\nconst App = () => {\n  const [userId, setUserId] = useState(undefined);\n  const [selectedPostId, setSelectedPostId] = useState(undefined);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          userId={userId}\n          setUserId={setUserId}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && (\n          <PostDetails\n            postId={selectedPostId}\n          />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}